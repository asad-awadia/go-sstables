// Code generated by protoc-gen-go. DO NOT EDIT.
// source: examples/proto/mutation.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpdateMutation struct {
	ColumnName           string   `protobuf:"bytes,1,opt,name=columnName" json:"columnName,omitempty"`
	ColumnValue          string   `protobuf:"bytes,2,opt,name=columnValue" json:"columnValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateMutation) Reset()         { *m = UpdateMutation{} }
func (m *UpdateMutation) String() string { return proto.CompactTextString(m) }
func (*UpdateMutation) ProtoMessage()    {}
func (*UpdateMutation) Descriptor() ([]byte, []int) {
	return fileDescriptor_mutation_0ed2f8715e875aca, []int{0}
}
func (m *UpdateMutation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMutation.Unmarshal(m, b)
}
func (m *UpdateMutation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMutation.Marshal(b, m, deterministic)
}
func (dst *UpdateMutation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMutation.Merge(dst, src)
}
func (m *UpdateMutation) XXX_Size() int {
	return xxx_messageInfo_UpdateMutation.Size(m)
}
func (m *UpdateMutation) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMutation.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMutation proto.InternalMessageInfo

func (m *UpdateMutation) GetColumnName() string {
	if m != nil {
		return m.ColumnName
	}
	return ""
}

func (m *UpdateMutation) GetColumnValue() string {
	if m != nil {
		return m.ColumnValue
	}
	return ""
}

type DeleteMutation struct {
	ColumnName           string   `protobuf:"bytes,1,opt,name=columnName" json:"columnName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMutation) Reset()         { *m = DeleteMutation{} }
func (m *DeleteMutation) String() string { return proto.CompactTextString(m) }
func (*DeleteMutation) ProtoMessage()    {}
func (*DeleteMutation) Descriptor() ([]byte, []int) {
	return fileDescriptor_mutation_0ed2f8715e875aca, []int{1}
}
func (m *DeleteMutation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMutation.Unmarshal(m, b)
}
func (m *DeleteMutation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMutation.Marshal(b, m, deterministic)
}
func (dst *DeleteMutation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMutation.Merge(dst, src)
}
func (m *DeleteMutation) XXX_Size() int {
	return xxx_messageInfo_DeleteMutation.Size(m)
}
func (m *DeleteMutation) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMutation.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMutation proto.InternalMessageInfo

func (m *DeleteMutation) GetColumnName() string {
	if m != nil {
		return m.ColumnName
	}
	return ""
}

type Mutation struct {
	SeqNumber uint64 `protobuf:"varint,1,opt,name=seqNumber" json:"seqNumber,omitempty"`
	// Types that are valid to be assigned to Mutation:
	//	*Mutation_Update
	//	*Mutation_Delete
	Mutation             isMutation_Mutation `protobuf_oneof:"mutation"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Mutation) Reset()         { *m = Mutation{} }
func (m *Mutation) String() string { return proto.CompactTextString(m) }
func (*Mutation) ProtoMessage()    {}
func (*Mutation) Descriptor() ([]byte, []int) {
	return fileDescriptor_mutation_0ed2f8715e875aca, []int{2}
}
func (m *Mutation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mutation.Unmarshal(m, b)
}
func (m *Mutation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mutation.Marshal(b, m, deterministic)
}
func (dst *Mutation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mutation.Merge(dst, src)
}
func (m *Mutation) XXX_Size() int {
	return xxx_messageInfo_Mutation.Size(m)
}
func (m *Mutation) XXX_DiscardUnknown() {
	xxx_messageInfo_Mutation.DiscardUnknown(m)
}

var xxx_messageInfo_Mutation proto.InternalMessageInfo

type isMutation_Mutation interface {
	isMutation_Mutation()
}

type Mutation_Update struct {
	Update *UpdateMutation `protobuf:"bytes,2,opt,name=update,oneof"`
}
type Mutation_Delete struct {
	Delete *DeleteMutation `protobuf:"bytes,3,opt,name=delete,oneof"`
}

func (*Mutation_Update) isMutation_Mutation() {}
func (*Mutation_Delete) isMutation_Mutation() {}

func (m *Mutation) GetMutation() isMutation_Mutation {
	if m != nil {
		return m.Mutation
	}
	return nil
}

func (m *Mutation) GetSeqNumber() uint64 {
	if m != nil {
		return m.SeqNumber
	}
	return 0
}

func (m *Mutation) GetUpdate() *UpdateMutation {
	if x, ok := m.GetMutation().(*Mutation_Update); ok {
		return x.Update
	}
	return nil
}

func (m *Mutation) GetDelete() *DeleteMutation {
	if x, ok := m.GetMutation().(*Mutation_Delete); ok {
		return x.Delete
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Mutation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Mutation_OneofMarshaler, _Mutation_OneofUnmarshaler, _Mutation_OneofSizer, []interface{}{
		(*Mutation_Update)(nil),
		(*Mutation_Delete)(nil),
	}
}

func _Mutation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Mutation)
	// mutation
	switch x := m.Mutation.(type) {
	case *Mutation_Update:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Update); err != nil {
			return err
		}
	case *Mutation_Delete:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Delete); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Mutation.Mutation has unexpected type %T", x)
	}
	return nil
}

func _Mutation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Mutation)
	switch tag {
	case 2: // mutation.update
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateMutation)
		err := b.DecodeMessage(msg)
		m.Mutation = &Mutation_Update{msg}
		return true, err
	case 3: // mutation.delete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeleteMutation)
		err := b.DecodeMessage(msg)
		m.Mutation = &Mutation_Delete{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Mutation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Mutation)
	// mutation
	switch x := m.Mutation.(type) {
	case *Mutation_Update:
		s := proto.Size(x.Update)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Mutation_Delete:
		s := proto.Size(x.Delete)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*UpdateMutation)(nil), "proto.UpdateMutation")
	proto.RegisterType((*DeleteMutation)(nil), "proto.DeleteMutation")
	proto.RegisterType((*Mutation)(nil), "proto.Mutation")
}

func init() {
	proto.RegisterFile("examples/proto/mutation.proto", fileDescriptor_mutation_0ed2f8715e875aca)
}

var fileDescriptor_mutation_0ed2f8715e875aca = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0x2d, 0xd6, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x2d, 0x2d, 0x49, 0x2c,
	0xc9, 0xcc, 0xcf, 0xd3, 0x03, 0x73, 0x85, 0x58, 0xc1, 0x94, 0x52, 0x10, 0x17, 0x5f, 0x68, 0x41,
	0x4a, 0x62, 0x49, 0xaa, 0x2f, 0x54, 0x5a, 0x48, 0x8e, 0x8b, 0x2b, 0x39, 0x3f, 0xa7, 0x34, 0x37,
	0xcf, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0x49, 0x44, 0x48, 0x81,
	0x8b, 0x1b, 0xc2, 0x0b, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x02, 0x2b, 0x40, 0x16, 0x52, 0x32,
	0xe0, 0xe2, 0x73, 0x49, 0xcd, 0x49, 0x25, 0xde, 0x4c, 0xa5, 0x69, 0x8c, 0x5c, 0x1c, 0x70, 0xc5,
	0x32, 0x5c, 0x9c, 0xc5, 0xa9, 0x85, 0x7e, 0xa5, 0xb9, 0x49, 0xa9, 0x45, 0x60, 0xb5, 0x2c, 0x41,
	0x08, 0x01, 0x21, 0x7d, 0x2e, 0xb6, 0x52, 0xb0, 0x83, 0xc1, 0x36, 0x73, 0x1b, 0x89, 0x42, 0xfc,
	0xa3, 0x87, 0xea, 0x0b, 0x0f, 0x86, 0x20, 0xa8, 0x32, 0x90, 0x86, 0x14, 0xb0, 0x6b, 0x24, 0x98,
	0x51, 0x34, 0xa0, 0x3a, 0x11, 0xa4, 0x01, 0xa2, 0xcc, 0x89, 0x8b, 0x8b, 0x03, 0x16, 0x56, 0x49,
	0x6c, 0x60, 0xb5, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x90, 0xaa, 0x25, 0x4d, 0x01,
	0x00, 0x00,
}
